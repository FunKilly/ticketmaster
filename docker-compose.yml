version: '3.3'
volumes:
  postgres_volume:
services:
  web: &web
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    command: bash -c "sleep 2s && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8080:8000"
    volumes:
      - .:/app
      - ./tests:/app/tests
      - ./data/media:/public/media
    depends_on:
      - db
      - rabbitmq
      - celery_worker
    env_file:
      - .env
    stdin_open: true
    tty: true
    environment:
      - COLUMNS=80

  db:
    image: postgres:12.2
    ports:
      - "5435:5433"
    volumes:
      - postgres_volume:/var/lib/postgresql
    env_file:
      - .env

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.7-alpine

  celery_worker:
    <<: *web
    container_name: celery_worker
    restart: "no"
    command: "celery -A ticketmaster worker --loglevel=info"
    ports: []
    depends_on:
      - rabbitmq
      - db

volumes:
  postgres_volume: